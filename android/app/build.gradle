plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.smileidentity.smile-id-android"
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location withflutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}



apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: "com.google.gms.google-services"

//apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

//def keystoreProperties = new Properties()
//def keystorePropertiesFile = rootProject.file("key.properties")
//if (keystorePropertiesFile.exists()) {
//    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
//    }

android {
    namespace = "com.example.pouch"
    compileSdkVersion = 34

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        checkReleaseBuilds false
    }

    defaultConfig {
        applicationId = "com.example.pouch"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

//    signingConfigs {
//        release {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile keystoreProperties['storeFile']
//            storePassword keystoreProperties['storePassword']
//        }
//    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/androids.*'
//        exclude 'androidx.*'
        exclude 'META-INF/DEPENDENCIES'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.3"
//        kotlinCompilerVersion = "1.5.3"
    }

}

flutter {
    source = "../.."
}

dependencies {
    implementation("androidx.compose.runtime:runtime:$version")
    implementation(platform("com.google.firebase:firebase-bom:33.4.0"))
    implementation 'com.google.firebase:firebase-messaging:24.0.2'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.2'
}